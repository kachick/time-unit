= Time::Unit

http://github.com/kachick/time-unit

== DESCRIPTION:

express the interval between two times

== FEATURES/PROBLEMS:

* documentation

== SYNOPSIS:

* prepare
    require 'time/unit'

* standard construction
    sec_30 = Time::Unit.new(30) #=> 30sec

* return other units
    sec_30.millisecond #=> 30000
    sec_30.second      #=> 30
    sec_30.minute      #=> 1/2
    sec_30.hour        #=> 1/120
    sec_30.day         #=> 1/2880
   
* extend interface
    last = Time.now
    sleep 1
    # Here, not tainted other namespaces
    Time.now - last #=> 1.0(Float)

    # extend
    require 'time/unit/import'
    
    # as you see
    Time.now - last #=> 1sec(Time::Unit)

    # and added constructor (Time.Unit => Time::Unit.new)
    day_1 = Time.Unit(1, :day) #=> 1day

* construct with unit name
    min_55_and_more = Time.Unit(3333333, :msec) #=> 55min 33sec 333msec

* verbose formatable
    min_55_and_more.to_s(true) #=> 55minutes 33seconds 333milliseconds
    Time.Unit(99, :min).to_s(true) #=> 1hour 39minutes
    (Time.Unit(99, :min) + Time.Unit(22, :min)).to_s(true) #=> 2hours 1minute
 
* calculatable
    sec_30 + min_55_and_more #=> 56min 3sec 333msec
    min_55_and_more - sec_30 #=> 55min 3sec 333msec
    Time.now + sec_30 #=> (show increased)
    Time.now - sec_30 #=> (show decreased)
    # cast arguments to seconds when Integer or Rational
    Time.Unit(1, :hour) + 330 #=> 1hour 5min 30sec

* max unit is day(not mounth or year)
    hour_900 = Time.Unit(900, :hour) #=> 37day 12hour

* sort and remove empty field when display
    Time.Unit(400, :msec) + 20 + Time.Unit(20, :day) + 40 #=> 20day 1min 400msec (removed 0sec)

* comparable
    sec_30 < hour_900 #=> true
    [sec_30, min_55_and_more, hour_900].sort #=> ["30sec", "55min 33sec 333msec", "37day 12hour"]

* parse from strings
    unit_1 = Time::Unit.parse('55minutes 33seconds 333milliseconds') #=> 55min 33sec 333msec
    unit_2 = Time::Unit.parse('55min 33sec 333msec') #=> 55min 33sec 333msec


== REQUIREMENTS:

* Ruby 1.9.3
* Ruby 1.9.2

== INSTALL:

* sudo gem install time-unit

== LICENSE:

(The MIT License)

Copyright (c) 2010 Kenichi Kamiya

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.